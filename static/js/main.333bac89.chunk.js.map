{"version":3,"sources":["frames/001.jpg","frames/002.jpg","frames/003.jpg","frames/004.jpg","frames/005.jpg","frames/006.jpg","frames/007.jpg","frames/008.jpg","frames/009.jpg","frames/010.jpg","frames/011.jpg","frames/012.jpg","frames/013.jpg","frames/014.jpg","frames/015.jpg","frames/016.jpg","frames/017.jpg","frames/018.jpg","frames/019.jpg","frames/020.jpg","frames/021.jpg","frames/022.jpg","frames/023.jpg","frames/024.jpg","components/Window.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Window","className","App","useState","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","img11","img12","img13","img14","img15","img16","img17","img18","img19","img20","img21","img22","img23","img24","data","active","setActive","useEffect","window","addEventListener","e","number","Math","round","scrollY","setTimeout","removeEventListener","style","backgroundImage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,2jBCU5BC,OARf,WACE,OACE,yBAAKC,UAAU,YC0DJC,OAjCf,WAAgB,IAAD,EAEWC,mBAAS,CAC/BC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,IAAMC,OAHtH,mBAENC,EAFM,aAKezB,mBAASC,MALxB,mBAKNyB,EALM,KAKEC,EALF,KAmBb,OAZAC,qBAAU,WAOR,OANAC,OAAOC,iBAAiB,UAAS,SAACC,GAChC,IAAIC,EAASC,KAAKC,MAAML,OAAOM,QAAU,KACzCC,WAAWT,EAAUF,EAAKO,IAAS,QAI9B,WACLH,OAAOQ,oBAAoB,aAE5B,IAGD,yBAAKvC,UAAU,OAEb,yBAAKA,UAAW,oBAAqBwC,MAAO,CAACC,gBAAgB,OAASb,EAAS,OAC7E,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QC3CYc,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.333bac89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/001.13273c21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/002.2604aa5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/003.7b08fe6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/004.9fa4e9ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/005.ce20fd28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/006.eb976364.jpg\";","module.exports = __webpack_public_path__ + \"static/media/007.61c2c14f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/008.bf53a340.jpg\";","module.exports = __webpack_public_path__ + \"static/media/009.7f20f489.jpg\";","module.exports = __webpack_public_path__ + \"static/media/010.920c87ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/011.c7e8a07e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/012.76c9a70e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/013.78c62d5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/014.054b6eb6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/015.f24d5f76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/016.75f456e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/017.257b037d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/018.8d0f3d92.jpg\";","module.exports = __webpack_public_path__ + \"static/media/019.99a1c269.jpg\";","module.exports = __webpack_public_path__ + \"static/media/020.8cde67fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/021.a9a6d596.jpg\";","module.exports = __webpack_public_path__ + \"static/media/022.ce003b72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/023.f2ef9d19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/024.6f4b3741.jpg\";","import React from 'react';\r\n\r\nfunction Window() {\r\n  return (\r\n    <div className=\"Window\">\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Window;\r\n","import React, {useState, useEffect} from 'react';\nimport img1 from \"./frames/001.jpg\";\nimport img2 from \"./frames/002.jpg\";\nimport img3 from \"./frames/003.jpg\";\nimport img4 from \"./frames/004.jpg\";\nimport img5 from \"./frames/005.jpg\";\nimport img6 from \"./frames/006.jpg\";\nimport img7 from \"./frames/007.jpg\";\nimport img8 from \"./frames/008.jpg\";\nimport img9 from \"./frames/009.jpg\";\nimport img10 from \"./frames/010.jpg\";\nimport img11 from \"./frames/011.jpg\";\nimport img12 from \"./frames/012.jpg\";\nimport img13 from \"./frames/013.jpg\";\nimport img14 from \"./frames/014.jpg\";\nimport img15 from \"./frames/015.jpg\";\nimport img16 from \"./frames/016.jpg\";\nimport img17 from \"./frames/017.jpg\";\nimport img18 from \"./frames/018.jpg\";\nimport img19 from \"./frames/019.jpg\";\nimport img20 from \"./frames/020.jpg\";\nimport img21 from \"./frames/021.jpg\";\nimport img22 from \"./frames/022.jpg\";\nimport img23 from \"./frames/023.jpg\";\nimport img24 from \"./frames/024.jpg\";\nimport './App.css';\n\nimport Window from \"./components/Window\";\n\nfunction App() {\n  \n  const [data, setData] = useState([\n    img1,img2,img3,img4,img5,img6,img7,img8,img9,img10,img11,img12,img13,img14,img15,img16,img17,img18,img19,img20,img21,img22,img23,img24,\n  ])\n  const [active, setActive] = useState(img1)\n\n  useEffect(()=>{\n    window.addEventListener(\"scroll\",(e)=>{\n      let number = Math.round(window.scrollY / 100);\n      setTimeout(setActive(data[number]),500)\n      \n    })\n\n    return ()=>{\n      window.removeEventListener(\"scroll\")\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n      \n      <div className={\"windows-container\"} style={{backgroundImage:'url(' + active + \")\"}}></div>\n        <Window />\n        <Window />\n        <Window />\n        <Window />\n      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}